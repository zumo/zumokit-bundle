<?php

namespace Zumo\ZumokitBundle\Tests\Controller;

use Zumo\ZumokitBundle\ZumokitBundle;
use PHPUnit\Framework\TestCase;
use Symfony\Bundle\FrameworkBundle\Client;
use Symfony\Bundle\FrameworkBundle\FrameworkBundle;
use Symfony\Bundle\FrameworkBundle\Kernel\MicroKernelTrait;
use Symfony\Component\Config\Loader\LoaderInterface;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Routing\RouteCollectionBuilder;

class AuthontrollerTest extends TestCase
{
    public function testHealthCheck()
    {
        $kernel = new AuthControllerKernel();
        $client = new Client($kernel);
        $client->request('GET', '/wallet/healthcheck');
        $this->assertSame(500, $client->getResponse()->getStatusCode());
    }

    public function testPreauth()
    {
        $kernel = new AuthControllerKernel();
        $client = new Client($kernel);
        $client->request('POST', '/wallet/preauth');

        $response = $client->getResponse();
        $this->assertSame(500, $response->getStatusCode());
    }

    public function testSync()
    {
        $kernel = new AuthControllerKernel();
        $client = new Client($kernel);
        $client->request('POST', '/wallet/sync');
        $this->assertSame(500, $client->getResponse()->getStatusCode());
    }
}

class AuthControllerKernel extends Kernel
{
    use MicroKernelTrait;
    public function __construct()
    {
        parent::__construct('test', true);
    }
    public function registerBundles()
    {
        return [
            new ZumokitBundle(),
            new FrameworkBundle(),
        ];
    }
    protected function configureRoutes(RouteCollectionBuilder $routes)
    {
        $routes->import(__DIR__.'/../../src/Resources/config/routes.xml', '/api');
    }
    protected function configureContainer(ContainerBuilder $c, LoaderInterface $loader)
    {
        $c->loadFromExtension('framework', [
            'secret' => 'F00',
        ]);
        $c->loadFromExtension('zumokit', [
            'app_id' => 'F00',
            'api_key' => 'B4R',
            'app_name' => '4PP',
            'api_url' => 'https://api.url.test',
            'domains' => ['api.domain_1.url.test', 'api.domain_2.url.test'],
            'primary_domain' => 'api.domain_primary.url.test',
            'security' => [],
            'user_registration' => [],
            'metadata' => [],
        ]);
        $c->loadFromExtension('framework', [
            'secret' => 'F00',
        ]);
    }
    public function getCacheDir()
    {
        return __DIR__.'/../cache/'.spl_object_hash($this);
    }
}
